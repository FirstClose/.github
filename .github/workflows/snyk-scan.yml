name: Scan for Vulnerabilities
on:
  workflow_call:
    inputs:
      code_scan:
        required: false
        type: boolean
        default: false
        description: "Run code scan"
      # ----- iac scan
      iac_scan:
        required: false
        type: boolean
        default: false
        description: "Run IaC scan"
      iac_path:
        required: false
        type: string
        default: "./terraform"
        description: "path to IaC files/directory to scan, like ./terraform or ./manifest.yml"
      # ----- docker scan
      docker_scan:
        required: false
        type: boolean
        default: false
        description: "Run docker scan"
      dockerfile_path:
        required: false
        type: string
        description: "Location of the Dockerfile"
      docker_image:
        required: false
        type: string
        description: "Docker image to scan"
      # ----- snyk config
      continue_on_error:
        required: false
        type: boolean
        default: true
        description: "Snyk continue on error property value"
      debug_mode:
        required: false
        type: boolean
        default: false
        description: "Enable debug logs in Snyk CLI output"

jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: snyk/actions/setup@master

      - name: Snyk Code Scan
        if: ${{ inputs.code_scan == true }}
        shell: bash
        continue-on-error: ${{ inputs.continue_on_error }}
        run: snyk code test ${{ inputs.debug_mode == true && '--debug' || '' }}
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}

      - name: snyk IaC scan
        if: ${{ inputs.iac_scan == true }}
        shell: bash
        working-directory: ${{ inputs.iac_path }}
        continue-on-error: ${{ inputs.continue_on_error }}
        run: snyk iac test ${{ inputs.debug_mode == true && '--debug' || '' }}
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}

      - name: snyk docker scan
        if: ${{ inputs.docker_scan == true }}
        shell: bash
        continue-on-error: ${{ inputs.continue_on_error }}
        run: snyk container test ${{ inputs.docker_image || '' }} ${{ inputs.dockerfile_path && format('--file={0}', inputs.dockerfile_path) || '' }} ${{ inputs.debug_mode == true && '--debug' || '' }}
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}
